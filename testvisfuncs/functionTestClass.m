classdef functionTestClass < hgsetget
    % Setting test class
    properties
        Select           % Selector
        Funs
    end % properties
  
    methods
        function obj = functionTestClass()
            obj.Select = viscore.DataSelector('visfuncs.functionConfig');
            addlistener(obj.Select, 'StateChanged', @obj.updateOnFunctionChange);
            obj.Select.getManager().putManagedObjs( ...
                visfuncs.functionObj.createFunctionObjs([]));
            obj.printFunctions('Original functions');
        end % constructor  
        
       function updateOnFunctionChange(obj, src, evtdata) %#ok<INUSD>
               obj.Funs = obj.Select.getObjects();
               obj.printFunctions('On function change');
        end % updateOnPropertyChange
        
        function printFunctions(obj, msg)
            obj.Select.getManager().printObjects(msg);
        end % printFunctions
        
  end % methods
  
  methods (Static = true)
      function fStruct = getDefaultFunctions()
            % Field name, class name, class modifier, display name, type, default, options, descriptions
            fStruct = struct( ...
                'Enabled',        {true,         true}, ...
                'Category',       {'block',        'block'}, ...
                'DisplayName',    {'Kurtosis', 'Standard Deviation'}, ...
                'ShortName',      {'K',        'SD'}, ...
                'Definition',     {'@(x) (squeeze(kurtosis(x, 1, 2)))', ...
                '@(x) (squeeze(std(x, 0, 2)))'}, ...
                'ThresholdType',  {'z score',    'z score'}, ...
                'ThresholdLevels', {3,              3}, ...
                'ThresholdColors', {[1, 0, 0],    [0, 1, 1]}, ...
                'BackgroundColor', {[0.7, 0.7, 0.7], [0.7, 0.7, 0.7]}, ...
                'ThresholdScope', {'global'     'global'}, ...
                'Description',    {'Kurtosis computed for each (element, block)', ...
                'Standard deviation for each (element, block)' ...
                });
        end % getDefaultFunctions
        
        function fStruct = getDefaultFunctionsNoSqueeze()
            % Field name, class name, class modifier, display name, type, default, options, descriptions
            fStruct = struct( ...
                'Enabled',        {true,         true}, ...
                'Category',       {'block',        'block'}, ...
                'DisplayName',    {'Kurtosis', 'Standard Deviation'}, ...
                'ShortName',      {'K',        'SD'}, ...
                'Definition',     {'@(x) (kurtosis(x, 1, 2))', ...
                '@(x) (std(x, 0, 2))'}, ...
                'ThresholdType',  {'z score',    'z score'}, ...
                'ThresholdLevels', {3,              3}, ...
                'ThresholdColors', {[1, 0, 0],    [0, 1, 1]}, ...
                'BackgroundColor', {[0.7, 0.7, 0.7], [0.7, 0.7, 0.7]}, ...
                'ThresholdScope', {'global'     'global'}, ...
                'Description',    {'Kurtosis computed for each (element, block)', ...
                'Standard deviation for each (element, block)' ...
                });
        end % getDefaultFunctions
        
  end % static methods
  
end % functionTestClass
